[{"/Users/yanismeziane/Desktop/udemy/front/src/index.js":"1","/Users/yanismeziane/Desktop/udemy/front/src/reportWebVitals.js":"2","/Users/yanismeziane/Desktop/udemy/front/src/helpers/db.js":"3","/Users/yanismeziane/Desktop/udemy/front/src/App.jsx":"4","/Users/yanismeziane/Desktop/udemy/front/src/views/form.jsx":"5","/Users/yanismeziane/Desktop/udemy/front/src/components/Footer.jsx":"6","/Users/yanismeziane/Desktop/udemy/front/src/components/Header.jsx":"7","/Users/yanismeziane/Desktop/udemy/front/src/views/homepage.jsx":"8","/Users/yanismeziane/Desktop/udemy/front/src/views/coursepage.jsx":"9","/Users/yanismeziane/Desktop/udemy/front/src/views/home.jsx":"10","/Users/yanismeziane/Desktop/udemy/front/src/views/availableCourse.jsx":"11","/Users/yanismeziane/Desktop/udemy/front/src/views/mydashboard.jsx":"12"},{"size":500,"mtime":1643874971564,"results":"13","hashOfConfig":"14"},{"size":362,"mtime":1643827087086,"results":"15","hashOfConfig":"14"},{"size":224,"mtime":1643827087085,"results":"16","hashOfConfig":"14"},{"size":867,"mtime":1643900244334,"results":"17","hashOfConfig":"14"},{"size":8480,"mtime":1643900420665,"results":"18","hashOfConfig":"14"},{"size":1956,"mtime":1643874971559,"results":"19","hashOfConfig":"14"},{"size":1873,"mtime":1643874971560,"results":"20","hashOfConfig":"14"},{"size":5713,"mtime":1643874971574,"results":"21","hashOfConfig":"14"},{"size":1571,"mtime":1643874971571,"results":"22","hashOfConfig":"14"},{"size":1969,"mtime":1643874971573,"results":"23","hashOfConfig":"14"},{"size":0,"mtime":1643874971566,"results":"24","hashOfConfig":"14"},{"size":1000,"mtime":1643900896907,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},"uudxsg",{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"33","messages":"34","suppressedMessages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"41"},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"41"},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"29"},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"29"},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"29"},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"29"},{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"29"},{"filePath":"66","messages":"67","suppressedMessages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"69","messages":"70","suppressedMessages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72"},"/Users/yanismeziane/Desktop/udemy/front/src/index.js",[],[],["73","74"],"/Users/yanismeziane/Desktop/udemy/front/src/reportWebVitals.js",[],[],"/Users/yanismeziane/Desktop/udemy/front/src/helpers/db.js",[],[],["75","76"],"/Users/yanismeziane/Desktop/udemy/front/src/App.jsx",["77","78"],[],"import Footer from './components/Footer.jsx';\nimport Header from './components/Header.jsx';\nimport Homepage from './views/homepage.jsx';\nimport Home from './views/home.jsx';\nimport Form from './views/form.jsx';\nimport Coursepage from './views/coursepage.jsx';\nimport MyDashBoard from './views/mydashboard.jsx'\nimport AvailableCourse from './views/availableCourse.jsx';\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\n\nfunction App() {\n  return (\n    <Router>\n      <Header />\n      <Routes>\n        <Route exact path=\"/form\" element={<Form />} />\n        <Route exact path=\"/homepage\" element={<Homepage />} />\n        <Route path=\"/courses/*\" element={<Coursepage />} />\n        <Route path=\"*\" element={<Home />} />\n        <Route path=\"/mydashboard\" element={<MyDashBoard />} />\n      </Routes>\n    </Router>\n  );\n}\n\nexport default App;\n",["79","80"],"/Users/yanismeziane/Desktop/udemy/front/src/views/form.jsx",["81","82","83"],[],"import '../App.css';\nimport axios from 'axios';\nimport React, { Component, useState } from 'react';\nimport env from 'react-dotenv';\nimport { v4 as uuidv4 } from 'uuid';\nimport { ethers } from \"ethers\";\nimport { createClient } from '@supabase/supabase-js'\nimport abi from \"../utils/CourseFactory.json\";\nvar CryptoJS = require(\"crypto-js\");\nconst FormData = require('form-data');\nconst supabase = createClient(env.DB_URL, env.DB_KEY)\n\nexport default function Form() {\n  const [selectedVideoFile, setSelectedVideoFile] = useState(null);\n  const [selectedImageFile, setSelectedImageFile] = useState(null);\n  const [title, setTitle] = useState('');\n  const [description, setDescription] = useState('');\n  const [content, setContent] = useState('');\n  const [price, setPrice] = useState(0);\n  const [contractAddressCreatad, setContractAddressCreatad] = useState('');\n  const [encryptionKey, setEncryptionKey] = useState(null);\n  const [currAccount, setCurrentAccount] = useState(\"\")\n  const contractAddress = \"0x898bFA5BDfb0a8D36DF067b20D4fdBA7528a4998\"\n  const contractABI = abi.abi\n\n  const onVideoChange = (event) => {\n    setSelectedVideoFile(event.target.files[0]);\n  };\n\n  const onTitleChange = (event) => {\n    setTitle(event.target.value);\n  };\n\n  const onImageChange = (event) => {\n    setSelectedImageFile(event.target.files[0]);\n  };\n\n  const onDescriptionChange = (event) => {\n    setDescription(event.target.value);\n  };\n\n  const onContentChange = (event) => {\n    setContent(event.target.value);\n  };\n\n  const onPriceChange = (event) => {\n    setPrice(event.target.value);\n  };\n\n  const uploadHashOnDb = async () => {\n    const { data, error } = await supabase.from('lesson_hash').insert([\n      {\n        course_address: contractAddressCreatad,\n        hash: encryptionKey,\n      },\n    ]);\n    if (error) {\n      console.log(error);\n    } else {\n      console.log(data);\n    }\n  }\n\n  async function mintLesson(price, url) {\n    const provider = new ethers.providers.Web3Provider(window.ethereum);\n    const signer = provider.getSigner()\n    const courseFactoryContract = new ethers.Contract(contractAddress, contractABI, signer);\n\n    let course_txn = await courseFactoryContract.createLesson(price, url);\n    const receipt = await course_txn.wait()\n\n    const event = receipt.events\n\n    console.log(\"Address of the contract created ==> \", event[0].address)\n    setContractAddressCreatad(event[0].address)\n\n    console.log(\"txn:\", course_txn);\n  }\n\n  const onFileUpload = () => {\n    const pinVideoFileToIPFS = async (pinataApiKey, pinataSecretApiKey) => {\n      const url = `https://api.pinata.cloud/pinning/pinFileToIPFS`;\n      let data = new FormData();\n      data.append('file', selectedVideoFile);\n\n      const metadata = JSON.stringify({\n        name: title,\n        content: content,\n      });\n      data.append('pinataMetadata', metadata);\n\n      const pinataOptions = JSON.stringify({\n        cidVersion: 0,\n        customPinPolicy: {\n          regions: [\n            {\n              id: 'FRA1',\n              desiredReplicationCount: 1,\n            },\n            {\n              id: 'NYC1',\n              desiredReplicationCount: 2,\n            },\n          ],\n        },\n      });\n      data.append('pinataOptions', pinataOptions);\n\n      const result = axios\n        .post(url, data, {\n          maxBodyLength: 'Infinity', //this is needed to prevent axios from erroring out with large files\n          headers: {\n            'Content-Type': `multipart/form-data; boundary=${data._boundary}`,\n            pinata_api_key: pinataApiKey,\n            pinata_secret_api_key: pinataSecretApiKey,\n          },\n        })\n        .then(function (response) {\n          console.log(response);\n          return 'https://ipfs.io/ipfs/' + response.data.IpfsHash;\n        })\n        .catch(function (error) {\n          console.log(error);\n        });\n\n      return result;\n    };\n\n    const pinImageFileToIPFS = async (pinataApiKey, pinataSecretApiKey) => {\n      const url = `https://api.pinata.cloud/pinning/pinFileToIPFS`;\n      let data = new FormData();\n      data.append('file', selectedImageFile);\n\n      const metadata = JSON.stringify({\n        name: title,\n        description: description,\n        content: content,\n      });\n      data.append('pinataMetadata', metadata);\n\n      const pinataOptions = JSON.stringify({\n        cidVersion: 0,\n        customPinPolicy: {\n          regions: [\n            {\n              id: 'FRA1',\n              desiredReplicationCount: 1,\n            },\n            {\n              id: 'NYC1',\n              desiredReplicationCount: 2,\n            },\n          ],\n        },\n      });\n      data.append('pinataOptions', pinataOptions);\n\n      const result = axios\n        .post(url, data, {\n          maxBodyLength: 'Infinity', //this is needed to prevent axios from erroring out with large files\n          headers: {\n            'Content-Type': `multipart/form-data; boundary=${data._boundary}`,\n            pinata_api_key: pinataApiKey,\n            pinata_secret_api_key: pinataSecretApiKey,\n          },\n        })\n        .then(function (response) {\n          console.log(response);\n          return 'https://ipfs.io/ipfs/' + response.data.IpfsHash;\n        })\n        .catch(function (error) {\n          console.log(error);\n        });\n\n      return result;\n    };\n\n    const pinJSONToIPFS = (pinataApiKey, pinataSecretApiKey, JSONBody) => {\n      const url = `https://api.pinata.cloud/pinning/pinJSONToIPFS`;\n      return axios\n        .post(url, JSONBody, {\n          headers: {\n            pinata_api_key: pinataApiKey,\n            pinata_secret_api_key: pinataSecretApiKey,\n          },\n        })\n        .then(function (response) {\n          console.log(response);\n          return 'https://ipfs.io/ipfs/' + response.data.IpfsHash;\n        })\n        .catch(function (error) {\n          //handle error here\n        });\n    };\n\n    async function main() {\n      const encryption_key = uuidv4();\n      setEncryptionKey(encryption_key)\n      const ipfsVideoUrl = await pinVideoFileToIPFS(\n        env.PINATA_KEY,\n        env.PINATA_SECRET_KEY\n      );\n      var ciphertext = CryptoJS.AES.encrypt(\n        JSON.stringify(ipfsVideoUrl),\n        encryptionKey\n      ).toString();\n      const ipfsImageUrl = await pinImageFileToIPFS(\n        env.PINATA_KEY,\n        env.PINATA_SECRET_KEY\n      );\n      const dataJson = {\n        name: 'MICHI',\n        description: 'MICHI is a new way to learn and share knowledge.',\n        image:\n          'https://ipfs.io/ipfs/QmNyKyL9YssHQWGfAUGkigioZWDGZnEbBJHy8pcajmiC7G',\n        slug: 'michi_learn',\n        'ipfs_video_url': ciphertext,\n        'metadata': {\n          'name': title,\n          'description': description,\n          'background_image': ipfsImageUrl,\n        }\n      }\n      const uri = await pinJSONToIPFS(env.PINATA_KEY, env.PINATA_SECRET_KEY, dataJson);\n      uploadHashOnDb();\n      mintLesson(price, uri);\n    }\n\n    main();\n  };\n\n  const fileData = () => {\n    if (selectedVideoFile) {\n      return (\n        <div>\n          <h2>File Details:</h2>\n\n          <p>File Name: {selectedVideoFile.name}</p>\n\n          <p>File Type: {selectedVideoFile.type}</p>\n\n          <p>\n            Last Modified: {selectedVideoFile.lastModifiedDate.toDateString()}\n          </p>\n        </div>\n      );\n    } else {\n      return (\n        <div>\n          <br />\n          <h4>Choose before Pressing the Upload button</h4>\n        </div>\n      );\n    }\n\n  };\n\n  return (\n    <div>\n      <h1>Web3 Udemy</h1>\n      <h3>Create your first course!</h3>\n      <div>\n        <label>Title</label>\n        <input type=\"text\" value={title} onChange={onTitleChange}></input>\n        <label>Upload your video content</label>\n        <input type=\"file\" onChange={onVideoChange} />\n        <label>Description</label>\n        <input\n          type=\"text\"\n          value={description}\n          onChange={onDescriptionChange}\n        ></input>\n        <label>Upload a background image</label>\n        <input type=\"file\" onChange={onImageChange} />\n        <label>Content</label>\n        <input\n          id=\"textarea\"\n          type=\"textarea\"\n          value={content}\n          onChange={onContentChange}\n        ></input>\n        <input\n          type=\"text\"\n          value={price}\n          pattern=\"[0-9]*\"\n          onChange={onPriceChange}\n        ></input>\n        <br />\n        <button onClick={onFileUpload}>Upload!</button>\n      </div>\n      {fileData()}\n    </div>\n  );\n}\n","/Users/yanismeziane/Desktop/udemy/front/src/components/Footer.jsx",["84","85","86","87","88","89","90"],[],"import * as React from 'react';\nimport AppBar from '@mui/material/AppBar';\nimport Box from '@mui/material/Box';\nimport Toolbar from '@mui/material/Toolbar';\nimport Typography from '@mui/material/Typography';\nimport Container from '@mui/material/Container';\nimport Avatar from '@mui/material/Avatar';\nimport { Link } from '@mui/material';\n\nexport default function Footer() {\n  return <div></div>;\n  // return (\n  //   <AppBar position=\"static\" sx={{ backgroundColor: '#000000' }}>\n  //     <Container maxWidth=\"xl\">\n  //       <Box sx={{ display: 'flex', flexDirection: 'row-reverse' }}>\n  //         <Link\n  //           href=\"https://twitter.com/thomas_cherret\"\n  //           underline=\"none\"\n  //           sx={{ cursor: 'pointer' }}\n  //         >\n  //           <Typography\n  //             component=\"div\"\n  //             color=\"#1D1F23\"\n  //             variant=\"caption\"\n  //             sx={{\n  //               mr: 2,\n  //               display: { xs: 'none', md: 'flex' },\n  //               fontStyle: 'italic',\n  //             }}\n  //           >\n  //             Made by @tche\n  //           </Typography>\n  //         </Link>\n  //       </Box>\n  //       <Box sx={{ display: 'flex', flexDirection: 'row-reverse' }}>\n  //         <Link\n  //           href=\"https://twitter.com/thomas_cherret\"\n  //           underline=\"none\"\n  //           target=\"_blank\"\n  //         >\n  //           <Typography\n  //             noWrap\n  //             component=\"div\"\n  //             color=\"#1D1F23\"\n  //             variant=\"caption\"\n  //             sx={{\n  //               flexGrow: 1,\n  //               display: { xs: 'flex', md: 'none' },\n  //               fontStyle: 'italic',\n  //             }}\n  //           >\n  //             Made by @tche\n  //           </Typography>\n  //         </Link>\n  //       </Box>\n  //       <Box sx={{ flexGrow: 1, display: { xs: 'none', md: 'flex' } }}></Box>\n  //     </Container>\n  //   </AppBar>\n  // );\n}\n","/Users/yanismeziane/Desktop/udemy/front/src/components/Header.jsx",["91","92","93"],[],"import * as React from 'react';\nimport AppBar from '@mui/material/AppBar';\nimport Box from '@mui/material/Box';\nimport Toolbar from '@mui/material/Toolbar';\nimport Typography from '@mui/material/Typography';\nimport Container from '@mui/material/Container';\nimport Button from '@mui/material/Button';\nimport Avatar from '@mui/material/Avatar';\nimport { useNavigate } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\n\nexport default function Header() {\n  const navigate = useNavigate();\n  const goHome = () => {\n    navigate('/');\n  };\n  return (\n    <AppBar position=\"static\" sx={{ backgroundColor: '#1D1F23' }}>\n      <Container maxWidth=\"xl\">\n        <Toolbar disableGutters>\n          <Box onClick={() => goHome()} sx={{ cursor: 'pointer' }}>\n            <Typography\n              variant=\"h6\"\n              noWrap\n              component=\"div\"\n              color=\"#FF785A\"\n              sx={{ mr: 2, display: { xs: 'none', md: 'flex' } }}\n            >\n              🏛️ Michi\n            </Typography>\n          </Box>\n          <Typography\n            variant=\"h6\"\n            noWrap\n            component=\"div\"\n            sx={{ flexGrow: 1, display: { xs: 'flex', md: 'none' } }}\n            color=\"#FF785A\"\n          >\n            🏛️ Michi\n          </Typography>\n          <Box sx={{ flexGrow: 1, display: { xs: 'none', md: 'flex' } }}></Box>\n\n          <Box sx={{ flexGrow: 0 }}>\n            <Button\n              variant=\"contained\"\n              sx={{\n                backgroundColor: '#FF785A',\n                ':hover': {\n                  bgcolor: '#FF88DC', // theme.palette.primary.main\n                  color: 'black',\n                },\n              }}\n              size=\"large\"\n            >\n              Connect Wallet\n            </Button>\n          </Box>\n        </Toolbar>\n      </Container>\n    </AppBar>\n  );\n}\n","/Users/yanismeziane/Desktop/udemy/front/src/views/homepage.jsx",["94","95"],[],"import '../App.css';\nimport React, { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport {\n  Container,\n  Typography,\n  Box,\n  Card,\n  CardContent,\n  CardMedia,\n  Grid,\n} from '@mui/material';\nimport { CardActionArea } from '@mui/material';\n\nexport default function Homepage() {\n  const [lessons, setLessons] = useState([\n    {\n      title: 'Hey, lesson 1',\n      owner: 'goingiogngoin',\n      description: 'Learn XYZ',\n      address: '0xabc',\n      amount: '10$',\n      image:\n        'https://d1fmx1rbmqrxrr.cloudfront.net/zdnet/i/edit/ne/2021/09/Python%20(2).jpg',\n    },\n    {\n      title: 'Hey, lesson 2',\n      owner: 'goingiogngoin',\n      description: 'Learn XYZ',\n      address: '0xabc',\n      amount: '10$',\n      image:\n        'https://d1fmx1rbmqrxrr.cloudfront.net/zdnet/i/edit/ne/2021/09/Python%20(2).jpg',\n    },\n    {\n      title: 'Hey, lesson 3',\n      owner: 'goingiogngoin',\n      description: 'Learn XYZ',\n      address: '0xabc',\n      amount: '10$',\n      image:\n        'https://d1fmx1rbmqrxrr.cloudfront.net/zdnet/i/edit/ne/2021/09/Python%20(2).jpg',\n    },\n    {\n      title: 'Hey, lesson 4',\n      owner: 'goingiogngoin',\n      description: 'Learn XYZ',\n      address: '0xabc',\n      amount: '10$',\n      image:\n        'https://d1fmx1rbmqrxrr.cloudfront.net/zdnet/i/edit/ne/2021/09/Python%20(2).jpg',\n    },\n    {\n      title: 'Hey, lesson 1',\n      owner: 'goingiogngoin',\n      description: 'Learn XYZ',\n      address: '0xabc',\n      amount: '10$',\n      image:\n        'https://d1fmx1rbmqrxrr.cloudfront.net/zdnet/i/edit/ne/2021/09/Python%20(2).jpg',\n    },\n    {\n      title: 'Hey, lesson 2',\n      owner: 'goingiogngoin',\n      description: 'Learn XYZ',\n      address: '0xabc',\n      amount: '10$',\n      image:\n        'https://d1fmx1rbmqrxrr.cloudfront.net/zdnet/i/edit/ne/2021/09/Python%20(2).jpg',\n    },\n    {\n      title: 'Hey, lesson 3',\n      owner: 'goingiogngoin',\n      description: 'Learn XYZ',\n      address: '0xabc',\n      amount: '10$',\n      image:\n        'https://d1fmx1rbmqrxrr.cloudfront.net/zdnet/i/edit/ne/2021/09/Python%20(2).jpg',\n    },\n    {\n      title: 'Hey, lesson 4',\n      owner: 'goingiogngoin',\n      description: 'Learn XYZ',\n      address: '0xabc',\n      amount: '10$',\n      image:\n        'https://d1fmx1rbmqrxrr.cloudfront.net/zdnet/i/edit/ne/2021/09/Python%20(2).jpg',\n    },\n    {\n      title: 'Hey, lesson 1',\n      owner: 'goingiogngoin',\n      description: 'Learn XYZ',\n      address: '0xabc',\n      amount: '10$',\n      image:\n        'https://d1fmx1rbmqrxrr.cloudfront.net/zdnet/i/edit/ne/2021/09/Python%20(2).jpg',\n    },\n    {\n      title: 'Hey, lesson 2',\n      owner: 'goingiogngoin',\n      description: 'Learn XYZ',\n      address: '0xabc',\n      amount: '10$',\n      image:\n        'https://d1fmx1rbmqrxrr.cloudfront.net/zdnet/i/edit/ne/2021/09/Python%20(2).jpg',\n    },\n    {\n      title: 'Hey, lesson 3',\n      owner: 'goingiogngoin',\n      description: 'Learn XYZ',\n      address: '0xabc',\n      amount: '10$',\n      image:\n        'https://d1fmx1rbmqrxrr.cloudfront.net/zdnet/i/edit/ne/2021/09/Python%20(2).jpg',\n    },\n    {\n      title: 'Hey, lesson 4',\n      owner: 'goingiogngoin',\n      description: 'Learn XYZ',\n      address: '0xabc',\n      amount: '10$',\n      image:\n        'https://d1fmx1rbmqrxrr.cloudfront.net/zdnet/i/edit/ne/2021/09/Python%20(2).jpg',\n    },\n  ]);\n  const navigate = useNavigate();\n\n  const selectCourse = (lesson) => {\n    console.log(lesson.address);\n    navigate(`/courses/${lesson.address}`, { state: lesson });\n  };\n\n  return (\n    <Container className=\"main-container\" maxWidth=\"false\">\n      <Box\n        sx={{\n          display: 'flex',\n          justifyContent: 'center',\n          flexDirection: 'column',\n          alignItems: 'center',\n        }}\n      >\n        <Typography color=\"#FFFFFF\" sx={{ mt: '10px' }}>\n          Here are the best lessons on the platform yet!\n        </Typography>\n        {/* <TextField\n          id=\"outlined-basic\"\n          variant=\"outlined\"\n          autoFocus\n          placeholder=\"\"\n          sx={{\n            backgroundColor: '#F4EDDE',\n            width: { xs: '80vw', sm: '20vw' },\n            borderColor: 'red',\n            outline: 'none',\n          }}\n        /> */}\n      </Box>\n      <Grid\n        container\n        spacing={4}\n        sx={{ mt: '10px', overflow: 'auto', maxHeight: { xs: 380, sm: 620 } }}\n      >\n        {lessons.length > 0\n          ? lessons.map((lesson) => (\n              <Grid\n                item\n                xs={12}\n                md={6}\n                lg={4}\n                key={lesson.id}\n                sx={{\n                  display: 'flex',\n                  justifyContent: 'center',\n                  flexDirection: 'column',\n                  alignItems: 'center',\n                }}\n              >\n                <Card sx={{ minWidth: 420 }}>\n                  <CardActionArea onClick={() => selectCourse(lesson)}>\n                    <CardMedia\n                      component=\"img\"\n                      height=\"200\"\n                      image={lesson.image}\n                      alt=\"green iguana\"\n                    />\n                    <CardContent>\n                      <Typography gutterBottom variant=\"h5\" component=\"div\">\n                        {lesson.title}\n                      </Typography>\n                      <Typography variant=\"body2\" color=\"text.secondary\">\n                        {lesson.description}\n                      </Typography>\n                    </CardContent>\n                  </CardActionArea>\n                </Card>\n              </Grid>\n            ))\n          : null}\n      </Grid>\n    </Container>\n  );\n}\n","/Users/yanismeziane/Desktop/udemy/front/src/views/coursepage.jsx",["96","97","98","99","100","101"],[],"import axios from 'axios';\nimport React, { useEffect, useState } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport env from 'react-dotenv';\nimport { ethers } from 'ethers';\nimport course from '../utils/course.json';\nvar CryptoJS = require('crypto-js');\nconst FormData = require('form-data');\n\nexport default function AvailableCourse() {\n  const location = useLocation();\n  const [lesson, setLesson] = useState(location.state);\n  const [courseContract, setCourseContract] = useState(null);\n\n  useEffect(() => {\n    const { ethereum } = window;\n\n    if (ethereum) {\n      const provider = new ethers.providers.Web3Provider(ethereum);\n      const signer = provider.getSigner();\n      console.log(signer);\n      const courseContract = new ethers.Contract(\n        lesson.address,\n        course.abi,\n        signer\n      );\n      setCourseContract(courseContract);\n    } else {\n      console.log('Ethereum object not found');\n    }\n  }, []);\n\n  const mintCourse = async () => {\n    try {\n      if (courseContract) {\n        console.log('clicked');\n        console.log(courseContract);\n        // const mintTxn = await courseContract.takeClass({\n        //   value: ethers.utils.parseEther('0.1'),\n        // });\n        // await mintTxn.wait();\n        // console.log('mintTxn:', mintTxn);\n      }\n    } catch (error) {\n      console.error('Error while minting:', error);\n    }\n  };\n\n  return (\n    <div>\n      <h1> {lesson.title}</h1>\n      <p>{lesson.description} </p>\n      <button onClick={() => mintCourse()}>Buy the lesson</button>\n    </div>\n  );\n}\n","/Users/yanismeziane/Desktop/udemy/front/src/views/home.jsx",["102","103","104"],[],"import React, { Component, useState, useEffect } from 'react';\nimport { BrowserRouter, Route, Link } from 'react-router-dom';\n\nexport default function Home() {\n  const [currentAccount, setCurrentAccount] = useState('');\n\n  const checkIfWalletIsConnected = async () => {\n    const { ethereum } = window;\n\n    if (!ethereum) {\n      console.log('Make sure you have metamask!');\n      return;\n    } else {\n      console.log('We have the ethereum object', ethereum);\n    }\n\n    const accounts = await ethereum.request({ method: 'eth_accounts' });\n\n    if (accounts.length !== 0) {\n      const account = accounts[0];\n      console.log('Found an authorized account:', account);\n      setCurrentAccount(account);\n    } else {\n      console.log('No authorized account found');\n    }\n  };\n\n  const connectWallet = async () => {\n    try {\n      const { ethereum } = window;\n\n      if (!ethereum) {\n        alert('Get Metamask!');\n        return;\n      }\n\n      const accounts = await ethereum.request({\n        method: 'eth_requestAccounts',\n      });\n\n      console.log('Connected', accounts[0]);\n      setCurrentAccount(accounts[0]);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const renderNotConnectedContainer = () => (\n    <button\n      onClick={connectWallet}\n      className=\"cta-button connect-wallet-button\"\n    >\n      Connect to Wallet\n    </button>\n  );\n\n  useEffect(() => {\n    checkIfWalletIsConnected();\n  }, []);\n\n  return (\n    <div>\n      <h1>Welcome To Michi</h1>\n      <p>Connect your wallet to start your journey!</p>\n      {currentAccount === '' ? (\n        renderNotConnectedContainer()\n      ) : (\n        <div>\n          <p>Wallect connected!!</p>\n          <nav>\n            <div>\n              <Link to={`/courses/${currentAccount}`}>Check your NFT</Link>\n            </div>\n            <div>\n              <Link to=\"/Form\">Create your first course</Link>\n            </div>\n          </nav>\n        </div>\n      )}\n    </div>\n  );\n}\n","/Users/yanismeziane/Desktop/udemy/front/src/views/availableCourse.jsx",[],[],"/Users/yanismeziane/Desktop/udemy/front/src/views/mydashboard.jsx",["105","106","107","108","109"],[],"import React, { useEffect, useState } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { ethers } from 'ethers';\nimport abi from \"../utils/CourseFactory.json\";\n\nexport default function MyDashBoard() {\n  const [allCoursesCreated, setAllCoursesCreated] = useState([]);\n  const contractAddress = \"0x898bFA5BDfb0a8D36DF067b20D4fdBA7528a4998\"\n  const contractABI = abi.abi\n\n  useEffect(() => {\n    const { ethereum } = window;\n\n    if (ethereum) {\n      const provider = new ethers.providers.Web3Provider(ethereum);\n      const signer = provider.getSigner();\n      const courseFactoryContract = new ethers.Contract(contractAddress, contractABI, signer);\n\n      const getAllCourses = async () => {\n        const allContracts = courseFactoryContract.getContracts(signer);\n        console.log(getAllCourses)\n      };\n\n      getAllCourses();\n\n    } else {\n      console.log('Ethereum object not found');\n    }\n  }, []);\n\n  return (\n    <div>\n      <h1> Hello World!</h1>\n    </div>\n  );\n}\n",{"ruleId":"110","replacedBy":"111"},{"ruleId":"112","replacedBy":"113"},{"ruleId":"110","replacedBy":"114"},{"ruleId":"112","replacedBy":"115"},{"ruleId":"116","severity":1,"message":"117","line":1,"column":8,"nodeType":"118","messageId":"119","endLine":1,"endColumn":14},{"ruleId":"116","severity":1,"message":"120","line":8,"column":8,"nodeType":"118","messageId":"119","endLine":8,"endColumn":23},{"ruleId":"110","replacedBy":"121"},{"ruleId":"112","replacedBy":"122"},{"ruleId":"116","severity":1,"message":"123","line":3,"column":17,"nodeType":"118","messageId":"119","endLine":3,"endColumn":26},{"ruleId":"116","severity":1,"message":"124","line":22,"column":10,"nodeType":"118","messageId":"119","endLine":22,"endColumn":21},{"ruleId":"116","severity":1,"message":"125","line":22,"column":23,"nodeType":"118","messageId":"119","endLine":22,"endColumn":40},{"ruleId":"116","severity":1,"message":"126","line":2,"column":8,"nodeType":"118","messageId":"119","endLine":2,"endColumn":14},{"ruleId":"116","severity":1,"message":"127","line":3,"column":8,"nodeType":"118","messageId":"119","endLine":3,"endColumn":11},{"ruleId":"116","severity":1,"message":"128","line":4,"column":8,"nodeType":"118","messageId":"119","endLine":4,"endColumn":15},{"ruleId":"116","severity":1,"message":"129","line":5,"column":8,"nodeType":"118","messageId":"119","endLine":5,"endColumn":18},{"ruleId":"116","severity":1,"message":"130","line":6,"column":8,"nodeType":"118","messageId":"119","endLine":6,"endColumn":17},{"ruleId":"116","severity":1,"message":"131","line":7,"column":8,"nodeType":"118","messageId":"119","endLine":7,"endColumn":14},{"ruleId":"116","severity":1,"message":"132","line":8,"column":10,"nodeType":"118","messageId":"119","endLine":8,"endColumn":14},{"ruleId":"116","severity":1,"message":"131","line":8,"column":8,"nodeType":"118","messageId":"119","endLine":8,"endColumn":14},{"ruleId":"116","severity":1,"message":"133","line":10,"column":10,"nodeType":"118","messageId":"119","endLine":10,"endColumn":18},{"ruleId":"116","severity":1,"message":"134","line":10,"column":20,"nodeType":"118","messageId":"119","endLine":10,"endColumn":29},{"ruleId":"116","severity":1,"message":"134","line":2,"column":17,"nodeType":"118","messageId":"119","endLine":2,"endColumn":26},{"ruleId":"116","severity":1,"message":"135","line":16,"column":19,"nodeType":"118","messageId":"119","endLine":16,"endColumn":29},{"ruleId":"116","severity":1,"message":"136","line":1,"column":8,"nodeType":"118","messageId":"119","endLine":1,"endColumn":13},{"ruleId":"116","severity":1,"message":"137","line":4,"column":8,"nodeType":"118","messageId":"119","endLine":4,"endColumn":11},{"ruleId":"116","severity":1,"message":"138","line":7,"column":5,"nodeType":"118","messageId":"119","endLine":7,"endColumn":13},{"ruleId":"116","severity":1,"message":"139","line":8,"column":7,"nodeType":"118","messageId":"119","endLine":8,"endColumn":15},{"ruleId":"116","severity":1,"message":"140","line":12,"column":18,"nodeType":"118","messageId":"119","endLine":12,"endColumn":27},{"ruleId":"141","severity":1,"message":"142","line":31,"column":6,"nodeType":"143","endLine":31,"endColumn":8,"suggestions":"144"},{"ruleId":"116","severity":1,"message":"123","line":1,"column":17,"nodeType":"118","messageId":"119","endLine":1,"endColumn":26},{"ruleId":"116","severity":1,"message":"145","line":2,"column":10,"nodeType":"118","messageId":"119","endLine":2,"endColumn":23},{"ruleId":"116","severity":1,"message":"146","line":2,"column":25,"nodeType":"118","messageId":"119","endLine":2,"endColumn":30},{"ruleId":"116","severity":1,"message":"147","line":2,"column":10,"nodeType":"118","messageId":"119","endLine":2,"endColumn":21},{"ruleId":"116","severity":1,"message":"148","line":7,"column":10,"nodeType":"118","messageId":"119","endLine":7,"endColumn":27},{"ruleId":"116","severity":1,"message":"149","line":7,"column":29,"nodeType":"118","messageId":"119","endLine":7,"endColumn":49},{"ruleId":"116","severity":1,"message":"150","line":20,"column":15,"nodeType":"118","messageId":"119","endLine":20,"endColumn":27},{"ruleId":"141","severity":1,"message":"151","line":29,"column":6,"nodeType":"143","endLine":29,"endColumn":8,"suggestions":"152"},"no-native-reassign",["153"],"no-negated-in-lhs",["154"],["153"],["154"],"no-unused-vars","'Footer' is defined but never used.","Identifier","unusedVar","'AvailableCourse' is defined but never used.",["153"],["154"],"'Component' is defined but never used.","'currAccount' is assigned a value but never used.","'setCurrentAccount' is assigned a value but never used.","'AppBar' is defined but never used.","'Box' is defined but never used.","'Toolbar' is defined but never used.","'Typography' is defined but never used.","'Container' is defined but never used.","'Avatar' is defined but never used.","'Link' is defined but never used.","'useState' is defined but never used.","'useEffect' is defined but never used.","'setLessons' is assigned a value but never used.","'axios' is defined but never used.","'env' is defined but never used.","'CryptoJS' is assigned a value but never used.","'FormData' is assigned a value but never used.","'setLesson' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'lesson.address'. Either include it or remove the dependency array.","ArrayExpression",["155"],"'BrowserRouter' is defined but never used.","'Route' is defined but never used.","'useLocation' is defined but never used.","'allCoursesCreated' is assigned a value but never used.","'setAllCoursesCreated' is assigned a value but never used.","'allContracts' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'contractABI'. Either include it or remove the dependency array.",["156"],"no-global-assign","no-unsafe-negation",{"desc":"157","fix":"158"},{"desc":"159","fix":"160"},"Update the dependencies array to be: [lesson.address]",{"range":"161","text":"162"},"Update the dependencies array to be: [contractABI]",{"range":"163","text":"164"},[952,954],"[lesson.address]",[926,928],"[contractABI]"]