[{"/Users/yanismeziane/Desktop/udemy/front/src/index.js":"1","/Users/yanismeziane/Desktop/udemy/front/src/reportWebVitals.js":"2","/Users/yanismeziane/Desktop/udemy/front/src/helpers/db.js":"3","/Users/yanismeziane/Desktop/udemy/front/src/App.jsx":"4","/Users/yanismeziane/Desktop/udemy/front/src/views/form.jsx":"5","/Users/yanismeziane/Desktop/udemy/front/src/components/Footer.jsx":"6","/Users/yanismeziane/Desktop/udemy/front/src/components/Header.jsx":"7","/Users/yanismeziane/Desktop/udemy/front/src/views/homepage.jsx":"8","/Users/yanismeziane/Desktop/udemy/front/src/views/coursepage.jsx":"9","/Users/yanismeziane/Desktop/udemy/front/src/views/home.jsx":"10","/Users/yanismeziane/Desktop/udemy/front/src/views/availableCourse.jsx":"11"},{"size":500,"mtime":1643874971564,"results":"12","hashOfConfig":"13"},{"size":362,"mtime":1643827087086,"results":"14","hashOfConfig":"13"},{"size":224,"mtime":1643827087085,"results":"15","hashOfConfig":"13"},{"size":753,"mtime":1643874971557,"results":"16","hashOfConfig":"13"},{"size":8143,"mtime":1643875305318,"results":"17","hashOfConfig":"13"},{"size":1956,"mtime":1643874971559,"results":"18","hashOfConfig":"13"},{"size":1873,"mtime":1643874971560,"results":"19","hashOfConfig":"13"},{"size":5713,"mtime":1643874971574,"results":"20","hashOfConfig":"13"},{"size":1571,"mtime":1643874971571,"results":"21","hashOfConfig":"13"},{"size":1969,"mtime":1643874971573,"results":"22","hashOfConfig":"13"},{"size":0,"mtime":1643874971566,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"uudxsg",{"filePath":"27","messages":"28","suppressedMessages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"31","messages":"32","suppressedMessages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40"},{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/yanismeziane/Desktop/udemy/front/src/index.js",[],[],"/Users/yanismeziane/Desktop/udemy/front/src/reportWebVitals.js",[],[],["59","60"],"/Users/yanismeziane/Desktop/udemy/front/src/helpers/db.js",[],[],"/Users/yanismeziane/Desktop/udemy/front/src/App.jsx",["61","62"],[],"/Users/yanismeziane/Desktop/udemy/front/src/views/form.jsx",["63","64","65"],[],"import '../App.css';\nimport axios from 'axios';\nimport React, { Component, useState } from 'react';\nimport env from 'react-dotenv';\nimport { v4 as uuidv4 } from 'uuid';\nimport { ethers } from \"ethers\";\nimport abi from \"../utils/CourseFactory.json\"\nvar CryptoJS = require(\"crypto-js\");\nconst FormData = require('form-data');\n\nexport default function Form() {\n  const [selectedVideoFile, setSelectedVideoFile] = useState(null);\n  const [selectedImageFile, setSelectedImageFile] = useState(null);\n  const [title, setTitle] = useState('');\n  const [description, setDescription] = useState('');\n  const [content, setContent] = useState('');\n  const [price, setPrice] = useState(0);\n  const [currAccount, setCurrentAccount] = useState(\"\")\n  const contractAddress = \"0x50d0d47C2C08d5A70BC9bC29734a2f62bEe9Bc24\"\n  const contractABI = abi.abi\n\n  const onVideoChange = (event) => {\n    setSelectedVideoFile(event.target.files[0]);\n  };\n\n  const onTitleChange = (event) => {\n    setTitle(event.target.value);\n  };\n\n  const onImageChange = (event) => {\n    setSelectedImageFile(event.target.files[0]);\n  };\n\n  const onDescriptionChange = (event) => {\n    setDescription(event.target.value);\n  };\n\n  const onContentChange = (event) => {\n    setContent(event.target.value);\n  };\n\n  const onPriceChange = (event) => {\n    setPrice(event.target.value);\n  };\n\n  async function mintLesson(price, url) {\n    const provider = new ethers.providers.Web3Provider(window.ethereum);\n    const signer = provider.getSigner()\n    const waveportalContract = new ethers.Contract(contractAddress, contractABI, signer);\n\n    let course = await waveportalContract.createLesson(price, url);\n\n    console.log(\"cleaned\", course)\n  }\n\n  const onFileUpload = () => {\n    const pinVideoFileToIPFS = async (pinataApiKey, pinataSecretApiKey) => {\n      const url = `https://api.pinata.cloud/pinning/pinFileToIPFS`;\n      let data = new FormData();\n      data.append('file', selectedVideoFile);\n\n      const metadata = JSON.stringify({\n        name: title,\n        content: content,\n      });\n      data.append('pinataMetadata', metadata);\n\n      const pinataOptions = JSON.stringify({\n        cidVersion: 0,\n        customPinPolicy: {\n          regions: [\n            {\n              id: 'FRA1',\n              desiredReplicationCount: 1,\n            },\n            {\n              id: 'NYC1',\n              desiredReplicationCount: 2,\n            },\n          ],\n        },\n      });\n      data.append('pinataOptions', pinataOptions);\n\n      const result = axios\n        .post(url, data, {\n          maxBodyLength: 'Infinity', //this is needed to prevent axios from erroring out with large files\n          headers: {\n            'Content-Type': `multipart/form-data; boundary=${data._boundary}`,\n            pinata_api_key: pinataApiKey,\n            pinata_secret_api_key: pinataSecretApiKey,\n          },\n        })\n        .then(function (response) {\n          console.log(response);\n          return 'https://ipfs.io/ipfs/' + response.data.IpfsHash;\n        })\n        .catch(function (error) {\n          console.log(error);\n        });\n\n      return result;\n    };\n\n    const pinImageFileToIPFS = async (pinataApiKey, pinataSecretApiKey) => {\n      const url = `https://api.pinata.cloud/pinning/pinFileToIPFS`;\n      let data = new FormData();\n      data.append('file', selectedImageFile);\n\n      const metadata = JSON.stringify({\n        name: title,\n        description: description,\n        content: content,\n      });\n      data.append('pinataMetadata', metadata);\n\n      const pinataOptions = JSON.stringify({\n        cidVersion: 0,\n        customPinPolicy: {\n          regions: [\n            {\n              id: 'FRA1',\n              desiredReplicationCount: 1,\n            },\n            {\n              id: 'NYC1',\n              desiredReplicationCount: 2,\n            },\n          ],\n        },\n      });\n      data.append('pinataOptions', pinataOptions);\n\n      const result = axios\n        .post(url, data, {\n          maxBodyLength: 'Infinity', //this is needed to prevent axios from erroring out with large files\n          headers: {\n            'Content-Type': `multipart/form-data; boundary=${data._boundary}`,\n            pinata_api_key: pinataApiKey,\n            pinata_secret_api_key: pinataSecretApiKey,\n          },\n        })\n        .then(function (response) {\n          console.log(response);\n          return 'https://ipfs.io/ipfs/' + response.data.IpfsHash;\n        })\n        .catch(function (error) {\n          console.log(error);\n        });\n\n      return result;\n    };\n\n    const pinJSONToIPFS = (pinataApiKey, pinataSecretApiKey, JSONBody) => {\n      const url = `https://api.pinata.cloud/pinning/pinJSONToIPFS`;\n      return axios\n        .post(url, JSONBody, {\n          headers: {\n            pinata_api_key: pinataApiKey,\n            pinata_secret_api_key: pinataSecretApiKey,\n          },\n        })\n        .then(function (response) {\n          console.log(response);\n          return 'https://ipfs.io/ipfs/' + response.data.IpfsHash;\n        })\n        .catch(function (error) {\n          //handle error here\n        });\n    };\n\n    async function main() {\n      const encryption_key = uuidv4();\n      console.log(encryption_key);\n      const ipfsVideoUrl = await pinVideoFileToIPFS(\n        env.PINATA_KEY,\n        env.PINATA_SECRET_KEY\n      );\n      var ciphertext = CryptoJS.AES.encrypt(\n        JSON.stringify(ipfsVideoUrl),\n        encryption_key\n      ).toString();\n      const ipfsImageUrl = await pinImageFileToIPFS(\n        env.PINATA_KEY,\n        env.PINATA_SECRET_KEY\n      );\n      const dataJson = {\n        collection: {\n          name: 'MICHI',\n          description: 'MICHI is a new way to learn and share knowledge.',\n          image:\n            'https://ipfs.io/ipfs/QmNyKyL9YssHQWGfAUGkigioZWDGZnEbBJHy8pcajmiC7G',\n          slug: 'michi_learn',\n        },\n        'ipfs_video_url': ciphertext,\n        'metadata': {\n          'name': title,\n          'description': description,\n          'background_image': ipfsImageUrl,\n        }\n      }\n      const uri = await pinJSONToIPFS(env.PINATA_KEY, env.PINATA_SECRET_KEY, dataJson)\n      mintLesson(price, uri)\n    }\n\n    main();\n  };\n\n  const fileData = () => {\n    if (selectedVideoFile) {\n      return (\n        <div>\n          <h2>File Details:</h2>\n\n          <p>File Name: {selectedVideoFile.name}</p>\n\n          <p>File Type: {selectedVideoFile.type}</p>\n\n          <p>\n            Last Modified: {selectedVideoFile.lastModifiedDate.toDateString()}\n          </p>\n        </div>\n      );\n    } else {\n      return (\n        <div>\n          <br />\n          <h4>Choose before Pressing the Upload button</h4>\n        </div>\n      );\n    }\n\n    // TO ADD hash to the db once we have the address of the contract + the generated hash, to run in the console while waiting\n    // const { data, error } = await supabase.from('lesson_hash').insert([\n    //   {\n    //     course_address: 'gingigg',\n    //     hash: 'ifongoingiogn',\n    //   },\n    // ]);\n    // if (error) {\n    //   console.log(error);\n    // } else {\n    //   console.log(data);\n    // }\n  };\n\n  return (\n    <div>\n      <h1>Web3 Udemy</h1>\n      <h3>Create your first course!</h3>\n      <div>\n        <label>Title</label>\n        <input type=\"text\" value={title} onChange={onTitleChange}></input>\n        <label>Upload your video content</label>\n        <input type=\"file\" onChange={onVideoChange} />\n        <label>Description</label>\n        <input\n          type=\"text\"\n          value={description}\n          onChange={onDescriptionChange}\n        ></input>\n        <label>Upload a background image</label>\n        <input type=\"file\" onChange={onImageChange} />\n        <label>Content</label>\n        <input\n          id=\"textarea\"\n          type=\"textarea\"\n          value={content}\n          onChange={onContentChange}\n        ></input>\n        <input\n          type=\"text\"\n          value={price}\n          pattern=\"[0-9]*\"\n          onChange={onPriceChange}\n        ></input>\n        <br />\n        <button onClick={onFileUpload}>Upload!</button>\n      </div>\n      {fileData()}\n    </div>\n  );\n}\n","/Users/yanismeziane/Desktop/udemy/front/src/components/Footer.jsx",["66","67","68","69","70","71","72"],[],"/Users/yanismeziane/Desktop/udemy/front/src/components/Header.jsx",["73","74","75"],[],"/Users/yanismeziane/Desktop/udemy/front/src/views/homepage.jsx",["76","77"],[],"/Users/yanismeziane/Desktop/udemy/front/src/views/coursepage.jsx",["78","79","80","81","82","83"],[],"/Users/yanismeziane/Desktop/udemy/front/src/views/home.jsx",["84","85","86"],[],"/Users/yanismeziane/Desktop/udemy/front/src/views/availableCourse.jsx",[],[],{"ruleId":"87","replacedBy":"88"},{"ruleId":"89","replacedBy":"90"},{"ruleId":"91","severity":1,"message":"92","line":1,"column":8,"nodeType":"93","messageId":"94","endLine":1,"endColumn":14},{"ruleId":"91","severity":1,"message":"95","line":7,"column":8,"nodeType":"93","messageId":"94","endLine":7,"endColumn":23},{"ruleId":"91","severity":1,"message":"96","line":3,"column":17,"nodeType":"93","messageId":"94","endLine":3,"endColumn":26},{"ruleId":"91","severity":1,"message":"97","line":18,"column":10,"nodeType":"93","messageId":"94","endLine":18,"endColumn":21},{"ruleId":"91","severity":1,"message":"98","line":18,"column":23,"nodeType":"93","messageId":"94","endLine":18,"endColumn":40},{"ruleId":"91","severity":1,"message":"99","line":2,"column":8,"nodeType":"93","messageId":"94","endLine":2,"endColumn":14},{"ruleId":"91","severity":1,"message":"100","line":3,"column":8,"nodeType":"93","messageId":"94","endLine":3,"endColumn":11},{"ruleId":"91","severity":1,"message":"101","line":4,"column":8,"nodeType":"93","messageId":"94","endLine":4,"endColumn":15},{"ruleId":"91","severity":1,"message":"102","line":5,"column":8,"nodeType":"93","messageId":"94","endLine":5,"endColumn":18},{"ruleId":"91","severity":1,"message":"103","line":6,"column":8,"nodeType":"93","messageId":"94","endLine":6,"endColumn":17},{"ruleId":"91","severity":1,"message":"104","line":7,"column":8,"nodeType":"93","messageId":"94","endLine":7,"endColumn":14},{"ruleId":"91","severity":1,"message":"105","line":8,"column":10,"nodeType":"93","messageId":"94","endLine":8,"endColumn":14},{"ruleId":"91","severity":1,"message":"104","line":8,"column":8,"nodeType":"93","messageId":"94","endLine":8,"endColumn":14},{"ruleId":"91","severity":1,"message":"106","line":10,"column":10,"nodeType":"93","messageId":"94","endLine":10,"endColumn":18},{"ruleId":"91","severity":1,"message":"107","line":10,"column":20,"nodeType":"93","messageId":"94","endLine":10,"endColumn":29},{"ruleId":"91","severity":1,"message":"107","line":2,"column":17,"nodeType":"93","messageId":"94","endLine":2,"endColumn":26},{"ruleId":"91","severity":1,"message":"108","line":16,"column":19,"nodeType":"93","messageId":"94","endLine":16,"endColumn":29},{"ruleId":"91","severity":1,"message":"109","line":1,"column":8,"nodeType":"93","messageId":"94","endLine":1,"endColumn":13},{"ruleId":"91","severity":1,"message":"110","line":4,"column":8,"nodeType":"93","messageId":"94","endLine":4,"endColumn":11},{"ruleId":"91","severity":1,"message":"111","line":7,"column":5,"nodeType":"93","messageId":"94","endLine":7,"endColumn":13},{"ruleId":"91","severity":1,"message":"112","line":8,"column":7,"nodeType":"93","messageId":"94","endLine":8,"endColumn":15},{"ruleId":"91","severity":1,"message":"113","line":12,"column":18,"nodeType":"93","messageId":"94","endLine":12,"endColumn":27},{"ruleId":"114","severity":1,"message":"115","line":31,"column":6,"nodeType":"116","endLine":31,"endColumn":8,"suggestions":"117"},{"ruleId":"91","severity":1,"message":"96","line":1,"column":17,"nodeType":"93","messageId":"94","endLine":1,"endColumn":26},{"ruleId":"91","severity":1,"message":"118","line":2,"column":10,"nodeType":"93","messageId":"94","endLine":2,"endColumn":23},{"ruleId":"91","severity":1,"message":"119","line":2,"column":25,"nodeType":"93","messageId":"94","endLine":2,"endColumn":30},"no-native-reassign",["120"],"no-negated-in-lhs",["121"],"no-unused-vars","'Footer' is defined but never used.","Identifier","unusedVar","'AvailableCourse' is defined but never used.","'Component' is defined but never used.","'currAccount' is assigned a value but never used.","'setCurrentAccount' is assigned a value but never used.","'AppBar' is defined but never used.","'Box' is defined but never used.","'Toolbar' is defined but never used.","'Typography' is defined but never used.","'Container' is defined but never used.","'Avatar' is defined but never used.","'Link' is defined but never used.","'useState' is defined but never used.","'useEffect' is defined but never used.","'setLessons' is assigned a value but never used.","'axios' is defined but never used.","'env' is defined but never used.","'CryptoJS' is assigned a value but never used.","'FormData' is assigned a value but never used.","'setLesson' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'lesson.address'. Either include it or remove the dependency array.","ArrayExpression",["122"],"'BrowserRouter' is defined but never used.","'Route' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"123","fix":"124"},"Update the dependencies array to be: [lesson.address]",{"range":"125","text":"126"},[952,954],"[lesson.address]"]