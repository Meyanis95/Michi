{"ast":null,"code":"var _jsxFileName = \"/Users/yanismeziane/Desktop/udemy/src/App.js\";\nimport './App.css';\nimport axios from 'axios';\nimport React, { Component, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst FormData = require('form-data');\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onFileChange = event => {\n      this.setState({\n        selectedFile: event.target.files[0]\n      });\n    };\n\n    this.onTitleChange = event => {\n      this.setState({\n        title: event.target.value\n      });\n    };\n\n    this.onFileUpload = () => {\n      const formData = new FormData();\n\n      const pinFileToIPFS = (pinataApiKey, pinataSecretApiKey) => {\n        const url = `https://api.pinata.cloud/pinning/pinFileToIPFS`;\n        let data = new FormData();\n        data.append('file', this.state.selectedFile);\n        const metadata = JSON.stringify({\n          name: 'testname',\n          keyvalues: {\n            exampleKey: 'exampleValue'\n          }\n        });\n        data.append('pinataMetadata', metadata);\n        const pinataOptions = JSON.stringify({\n          cidVersion: 0,\n          customPinPolicy: {\n            regions: [{\n              id: 'FRA1',\n              desiredReplicationCount: 1\n            }, {\n              id: 'NYC1',\n              desiredReplicationCount: 2\n            }]\n          }\n        });\n        data.append('pinataOptions', pinataOptions);\n        axios.post(url, data, {\n          maxBodyLength: 'Infinity',\n          //this is needed to prevent axios from erroring out with large files\n          headers: {\n            'Content-Type': `multipart/form-data; boundary=${data._boundary}`,\n            pinata_api_key: pinataApiKey,\n            pinata_secret_api_key: pinataSecretApiKey\n          }\n        }).then(function (response) {\n          console.log(response);\n        }).catch(function (error) {\n          console.log(error);\n        });\n      };\n\n      pinFileToIPFS('aa687437416fab07fb57', 'd53a9d7f8e914d6063621f1534c3e4c353f690255e89621084d2073744c44f8a');\n    };\n\n    this.fileData = () => {\n      if (this.state.selectedFile) {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"File Details:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"File Name: \", this.state.selectedFile.name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"File Type: \", this.state.selectedFile.type]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Last Modified:\", \" \", this.state.selectedFile.lastModifiedDate.toDateString()]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 9\n        }, this);\n      } else {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Choose before Pressing the Upload button\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 9\n        }, this);\n      }\n    };\n\n    this.state = {\n      selectedFile: null,\n      title: null\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"GeeksforGeeks\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"File Upload using React!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          onChange: this.onFileChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Titre\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: this.state.title,\n          onChange: this.onTitleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: this.state.description,\n          onChange: this.onDescriptionChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: this.onFileUpload,\n          children: \"Upload!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this), this.fileData()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/yanismeziane/Desktop/udemy/src/App.js"],"names":["axios","React","Component","useState","FormData","require","App","constructor","props","onFileChange","event","setState","selectedFile","target","files","onTitleChange","title","value","onFileUpload","formData","pinFileToIPFS","pinataApiKey","pinataSecretApiKey","url","data","append","state","metadata","JSON","stringify","name","keyvalues","exampleKey","pinataOptions","cidVersion","customPinPolicy","regions","id","desiredReplicationCount","post","maxBodyLength","headers","_boundary","pinata_api_key","pinata_secret_api_key","then","response","console","log","catch","error","fileData","type","lastModifiedDate","toDateString","render","description","onDescriptionChange"],"mappings":"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","sourcesContent":["import './App.css';\nimport axios from 'axios';\nimport React, { Component, useState } from 'react';\nconst FormData = require('form-data');\n\nclass App extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      selectedFile: null,\n      title: null\n    }\n  }\n\n  onFileChange = event => {\n    this.setState({ selectedFile: event.target.files[0] });\n  };\n\n  onTitleChange = event => {\n    this.setState({ title: event.target.value })\n  }\n\n  onFileUpload = () => {\n    const formData = new FormData();\n\n    const pinFileToIPFS = (pinataApiKey, pinataSecretApiKey) => {\n      const url = `https://api.pinata.cloud/pinning/pinFileToIPFS`;\n      let data = new FormData();\n      data.append('file', this.state.selectedFile);\n\n      const metadata = JSON.stringify({\n        name: 'testname',\n        keyvalues: {\n          exampleKey: 'exampleValue'\n        }\n      });\n      data.append('pinataMetadata', metadata);\n\n      const pinataOptions = JSON.stringify({\n        cidVersion: 0,\n        customPinPolicy: {\n          regions: [\n            {\n              id: 'FRA1',\n              desiredReplicationCount: 1\n            },\n            {\n              id: 'NYC1',\n              desiredReplicationCount: 2\n            }\n          ]\n        }\n      });\n      data.append('pinataOptions', pinataOptions);\n\n      axios\n        .post(url, data, {\n          maxBodyLength: 'Infinity', //this is needed to prevent axios from erroring out with large files\n          headers: {\n            'Content-Type': `multipart/form-data; boundary=${data._boundary}`,\n            pinata_api_key: pinataApiKey,\n            pinata_secret_api_key: pinataSecretApiKey\n          }\n        })\n        .then(function (response) {\n          console.log(response)\n        })\n        .catch(function (error) {\n          console.log(error)\n        });\n    };\n    pinFileToIPFS('aa687437416fab07fb57', 'd53a9d7f8e914d6063621f1534c3e4c353f690255e89621084d2073744c44f8a')\n  };\n\n  fileData = () => {\n\n    if (this.state.selectedFile) {\n\n      return (\n        <div>\n          <h2>File Details:</h2>\n\n          <p>File Name: {this.state.selectedFile.name}</p>\n\n\n          <p>File Type: {this.state.selectedFile.type}</p>\n\n\n          <p>\n            Last Modified:{\" \"}\n            {this.state.selectedFile.lastModifiedDate.toDateString()}\n          </p>\n\n        </div>\n      );\n    } else {\n      return (\n        <div>\n          <br />\n          <h4>Choose before Pressing the Upload button</h4>\n        </div>\n      );\n    }\n  };\n\n  render() {\n\n    return (\n      <div>\n        <h1>\n          GeeksforGeeks\n        </h1>\n        <h3>\n          File Upload using React!\n        </h3>\n        <div>\n          <input type=\"file\" onChange={this.onFileChange} />\n          <label>Titre</label>\n          <input type=\"text\" value={this.state.title} onChange={this.onTitleChange}></input>\n          <input type=\"text\" value={this.state.description} onChange={this.onDescriptionChange}></input>\n          <br />\n          <button onClick={this.onFileUpload}>\n            Upload!\n          </button>\n        </div>\n        {this.fileData()}\n      </div>\n    );\n  }\n}\n\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}