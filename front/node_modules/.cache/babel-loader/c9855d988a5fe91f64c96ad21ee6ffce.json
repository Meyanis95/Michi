{"ast":null,"code":"var _jsxFileName = \"/Users/yanismeziane/Desktop/udemy/src/Components/form.js\",\n    _s = $RefreshSig$();\n\nimport '../form.css';\nimport axios from 'axios';\nimport React, { Component, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst FormData = require('form-data');\n\nfunction Form() {\n  _s();\n\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [title, setTitle] = useState(null);\n  const [description, setDescription] = useState(null);\n\n  const onFileChange = event => {\n    setSelectedFile(event.target.files[0]);\n  };\n\n  const onTitleChange = event => {\n    setTitle(event.target.value);\n  };\n\n  const onDescriptionChange = event => {\n    setDescription(event.target.value);\n  };\n\n  const onFileUpload = () => {\n    const formData = new FormData();\n\n    const pinFileToIPFS = (pinataApiKey, pinataSecretApiKey) => {\n      const url = `https://api.pinata.cloud/pinning/pinFileToIPFS`;\n      let data = new FormData();\n      data.append('file', this.state.selectedFile);\n      const metadata = JSON.stringify({\n        name: title,\n        description: description,\n        keyvalues: {\n          exampleKey: 'exampleValue'\n        }\n      });\n      data.append('pinataMetadata', metadata);\n      const pinataOptions = JSON.stringify({\n        cidVersion: 0,\n        customPinPolicy: {\n          regions: [{\n            id: 'FRA1',\n            desiredReplicationCount: 1\n          }, {\n            id: 'NYC1',\n            desiredReplicationCount: 2\n          }]\n        }\n      });\n      data.append('pinataOptions', pinataOptions);\n      axios.post(url, data, {\n        maxBodyLength: 'Infinity',\n        //this is needed to prevent axios from erroring out with large files\n        headers: {\n          'Content-Type': `multipart/form-data; boundary=${data._boundary}`,\n          pinata_api_key: pinataApiKey,\n          pinata_secret_api_key: pinataSecretApiKey\n        }\n      }).then(function (response) {\n        console.log(response);\n      }).catch(function (error) {\n        console.log(error);\n      });\n    };\n\n    pinFileToIPFS('aa687437416fab07fb57', 'd53a9d7f8e914d6063621f1534c3e4c353f690255e89621084d2073744c44f8a');\n  };\n\n  const fileData = () => {\n    if (selectedFile) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"File Details:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"File Name: \", this.state.selectedFile.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"File Type: \", this.state.selectedFile.type]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Last Modified:\", \" \", this.state.selectedFile.lastModifiedDate.toDateString()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Choose before Pressing the Upload button\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Web3 Udemy\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"File Upload using React!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        onChange: onFileChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Titre\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: title,\n        onChange: onTitleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Description\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: description,\n        onChange: onDescriptionChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: onFileUpload,\n        children: \"Upload!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this), fileData()]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 109,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Form, \"+120yNIkHAPX0Lv/jrHrGUwJLMQ=\");\n\n_c = Form;\nexport default Form;\n\nvar _c;\n\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"sources":["/Users/yanismeziane/Desktop/udemy/src/Components/form.js"],"names":["axios","React","Component","useState","FormData","require","Form","selectedFile","setSelectedFile","title","setTitle","description","setDescription","onFileChange","event","target","files","onTitleChange","value","onDescriptionChange","onFileUpload","formData","pinFileToIPFS","pinataApiKey","pinataSecretApiKey","url","data","append","state","metadata","JSON","stringify","name","keyvalues","exampleKey","pinataOptions","cidVersion","customPinPolicy","regions","id","desiredReplicationCount","post","maxBodyLength","headers","_boundary","pinata_api_key","pinata_secret_api_key","then","response","console","log","catch","error","fileData","type","lastModifiedDate","toDateString"],"mappings":"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","sourcesContent":["import '../form.css';\nimport axios from 'axios';\nimport React, { Component, useState } from 'react';\nconst FormData = require('form-data');\n\nfunction Form() {\n\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [title, setTitle] = useState(null);\n  const [description, setDescription] = useState(null);\n\n  const onFileChange = event => {\n    setSelectedFile(event.target.files[0]);\n  };\n\n  const onTitleChange = event => {\n    setTitle(event.target.value)\n  }\n\n  const onDescriptionChange = event => {\n    setDescription(event.target.value)\n  }\n\n  const onFileUpload = () => {\n    const formData = new FormData();\n\n    const pinFileToIPFS = (pinataApiKey, pinataSecretApiKey) => {\n      const url = `https://api.pinata.cloud/pinning/pinFileToIPFS`;\n      let data = new FormData();\n      data.append('file', this.state.selectedFile);\n\n      const metadata = JSON.stringify({\n        name: title,\n        description: description,\n        keyvalues: {\n          exampleKey: 'exampleValue'\n        }\n      });\n      data.append('pinataMetadata', metadata);\n\n      const pinataOptions = JSON.stringify({\n        cidVersion: 0,\n        customPinPolicy: {\n          regions: [\n            {\n              id: 'FRA1',\n              desiredReplicationCount: 1\n            },\n            {\n              id: 'NYC1',\n              desiredReplicationCount: 2\n            }\n          ]\n        }\n      });\n      data.append('pinataOptions', pinataOptions);\n\n      axios\n        .post(url, data, {\n          maxBodyLength: 'Infinity', //this is needed to prevent axios from erroring out with large files\n          headers: {\n            'Content-Type': `multipart/form-data; boundary=${data._boundary}`,\n            pinata_api_key: pinataApiKey,\n            pinata_secret_api_key: pinataSecretApiKey\n          }\n        })\n        .then(function (response) {\n          console.log(response)\n        })\n        .catch(function (error) {\n          console.log(error)\n        });\n    };\n    pinFileToIPFS('aa687437416fab07fb57', 'd53a9d7f8e914d6063621f1534c3e4c353f690255e89621084d2073744c44f8a')\n  };\n\n  const fileData = () => {\n\n    if (selectedFile) {\n\n      return (\n        <div>\n          <h2>File Details:</h2>\n\n          <p>File Name: {this.state.selectedFile.name}</p>\n\n\n          <p>File Type: {this.state.selectedFile.type}</p>\n\n\n          <p>\n            Last Modified:{\" \"}\n            {this.state.selectedFile.lastModifiedDate.toDateString()}\n          </p>\n\n        </div>\n      );\n    } else {\n      return (\n        <div>\n          <br />\n          <h4>Choose before Pressing the Upload button</h4>\n        </div>\n      );\n    }\n  };\n\n  return (\n    <div>\n      <h1>\n        Web3 Udemy\n      </h1>\n      <h3>\n        File Upload using React!\n      </h3>\n      <div>\n        <input type=\"file\" onChange={onFileChange} />\n        <label>Titre</label>\n        <input type=\"text\" value={title} onChange={onTitleChange}></input>\n        <label>Description</label>\n        <input type=\"text\" value={description} onChange={onDescriptionChange}></input>\n        <br />\n        <button onClick={onFileUpload}>\n          Upload!\n        </button>\n      </div>\n      {fileData()}\n    </div>\n  );\n}\n\nexport default Form;"]},"metadata":{},"sourceType":"module"}