{"ast":null,"code":"var _jsxFileName = \"/Users/tche/Documents/code/michi/Michi/front/src/view/course.js\",\n    _s = $RefreshSig$();\n\nimport '../form.css';\nimport axios from 'axios';\nimport React, { useEffect, useState } from 'react';\nimport env from 'react-dotenv';\nimport { ethers } from 'ethers';\nimport course from '../utils/course.json';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar CryptoJS = require('crypto-js');\n\nconst FormData = require('form-data');\n\nexport default function Course() {\n  _s();\n\n  const [courseContract, setCourseContract] = useState(null);\n  useEffect(() => {\n    const {\n      ethereum\n    } = window;\n\n    if (ethereum) {\n      const provider = new ethers.providers.Web3Provider(ethereum);\n      const signer = provider.getSigner();\n      const courseContract = new ethers.Contract('0xfBe45f41c2EdB5eFDfD9dCc36aD834651ac81B06', course.abi, signer);\n      console.log(courseContract);\n      setCourseContract(courseContract);\n    } else {\n      console.log('Ethereum object not found');\n    }\n  }, []);\n\n  const mintCourse = async () => {\n    try {\n      if (courseContract) {\n        console.log('clicked');\n        console.log(courseContract.address);\n        console.log('here');\n        const mintTxn = await courseContract.takeClass({\n          value: ethers.utils.parseEther('0.1')\n        });\n        await mintTxn.wait();\n        console.log('mintTxn:', mintTxn);\n      }\n    } catch (error) {\n      console.error('Error while minting:', error);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: \" Hello world\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => mintCourse(),\n      children: \"Mint Course\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Course, \"T1pnsq9HmkSggDn63MrlZKFpJQw=\");\n\n_c = Course;\n\nvar _c;\n\n$RefreshReg$(_c, \"Course\");","map":{"version":3,"sources":["/Users/tche/Documents/code/michi/Michi/front/src/view/course.js"],"names":["axios","React","useEffect","useState","env","ethers","course","CryptoJS","require","FormData","Course","courseContract","setCourseContract","ethereum","window","provider","providers","Web3Provider","signer","getSigner","Contract","abi","console","log","mintCourse","address","mintTxn","takeClass","value","utils","parseEther","wait","error"],"mappings":";;;AAAA,OAAO,aAAP;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,GAAP,MAAgB,cAAhB;AACA,SAASC,MAAT,QAAuB,QAAvB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;;;AACA,IAAIC,QAAQ,GAAGC,OAAO,CAAC,WAAD,CAAtB;;AACA,MAAMC,QAAQ,GAAGD,OAAO,CAAC,WAAD,CAAxB;;AAEA,eAAe,SAASE,MAAT,GAAkB;AAAA;;AAC/B,QAAM,CAACC,cAAD,EAAiBC,iBAAjB,IAAsCT,QAAQ,CAAC,IAAD,CAApD;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd,UAAM;AAAEW,MAAAA;AAAF,QAAeC,MAArB;;AACA,QAAID,QAAJ,EAAc;AACZ,YAAME,QAAQ,GAAG,IAAIV,MAAM,CAACW,SAAP,CAAiBC,YAArB,CAAkCJ,QAAlC,CAAjB;AACA,YAAMK,MAAM,GAAGH,QAAQ,CAACI,SAAT,EAAf;AACA,YAAMR,cAAc,GAAG,IAAIN,MAAM,CAACe,QAAX,CACrB,4CADqB,EAErBd,MAAM,CAACe,GAFc,EAGrBH,MAHqB,CAAvB;AAKAI,MAAAA,OAAO,CAACC,GAAR,CAAYZ,cAAZ;AACAC,MAAAA,iBAAiB,CAACD,cAAD,CAAjB;AACD,KAVD,MAUO;AACLW,MAAAA,OAAO,CAACC,GAAR,CAAY,2BAAZ;AACD;AACF,GAfQ,EAeN,EAfM,CAAT;;AAiBA,QAAMC,UAAU,GAAG,YAAY;AAC7B,QAAI;AACF,UAAIb,cAAJ,EAAoB;AAClBW,QAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACAD,QAAAA,OAAO,CAACC,GAAR,CAAYZ,cAAc,CAACc,OAA3B;AACAH,QAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AACA,cAAMG,OAAO,GAAG,MAAMf,cAAc,CAACgB,SAAf,CAAyB;AAC7CC,UAAAA,KAAK,EAAEvB,MAAM,CAACwB,KAAP,CAAaC,UAAb,CAAwB,KAAxB;AADsC,SAAzB,CAAtB;AAGA,cAAMJ,OAAO,CAACK,IAAR,EAAN;AACAT,QAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBG,OAAxB;AACD;AACF,KAXD,CAWE,OAAOM,KAAP,EAAc;AACdV,MAAAA,OAAO,CAACU,KAAR,CAAc,sBAAd,EAAsCA,KAAtC;AACD;AACF,GAfD;;AAiBA,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAGE;AAAQ,MAAA,OAAO,EAAE,MAAMR,UAAU,EAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAeD;;GApDuBd,M;;KAAAA,M","sourcesContent":["import '../form.css';\nimport axios from 'axios';\nimport React, { useEffect, useState } from 'react';\nimport env from 'react-dotenv';\nimport { ethers } from 'ethers';\nimport course from '../utils/course.json';\nvar CryptoJS = require('crypto-js');\nconst FormData = require('form-data');\n\nexport default function Course() {\n  const [courseContract, setCourseContract] = useState(null);\n\n  useEffect(() => {\n    const { ethereum } = window;\n    if (ethereum) {\n      const provider = new ethers.providers.Web3Provider(ethereum);\n      const signer = provider.getSigner();\n      const courseContract = new ethers.Contract(\n        '0xfBe45f41c2EdB5eFDfD9dCc36aD834651ac81B06',\n        course.abi,\n        signer\n      );\n      console.log(courseContract);\n      setCourseContract(courseContract);\n    } else {\n      console.log('Ethereum object not found');\n    }\n  }, []);\n\n  const mintCourse = async () => {\n    try {\n      if (courseContract) {\n        console.log('clicked');\n        console.log(courseContract.address);\n        console.log('here');\n        const mintTxn = await courseContract.takeClass({\n          value: ethers.utils.parseEther('0.1'),\n        });\n        await mintTxn.wait();\n        console.log('mintTxn:', mintTxn);\n      }\n    } catch (error) {\n      console.error('Error while minting:', error);\n    }\n  };\n\n  return (\n    <div>\n      <div> Hello world</div>\n\n      <button onClick={() => mintCourse()}>Mint Course</button>\n      {/* <div>\n        <video controls crossOrigin=\"anonymous\">\n          <source\n            // label=\"1080p\"\n            src=\"https://ipfs.io/ipfs/QmWRAzSgv5VrPHYyBAV5YUwU4taPhrVS9suyUdSL11nDiL\"\n          />\n        </video>\n      </div> */}\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}