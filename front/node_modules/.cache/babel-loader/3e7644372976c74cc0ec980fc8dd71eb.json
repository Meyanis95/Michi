{"ast":null,"code":"var _jsxFileName = \"/Users/yanismeziane/Desktop/udemy/src/App.js\";\nimport './App.css';\nimport axios from 'axios';\nimport { NFTStorage, File } from 'nft.storage';\nimport { pack } from 'ipfs-car/pack';\nimport React, { Component } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      // Initially, no file is selected\n      selectedFile: null\n    };\n\n    this.onFileChange = event => {\n      // Update the state\n      this.setState({\n        selectedFile: event.target.files[0]\n      });\n    };\n\n    this.onFileUpload = () => {\n      // Create an object of formData\n      const formData = new FormData(); // Update the formData object\n\n      formData.append(\"myFile\", this.state.selectedFile, this.state.selectedFile.name); // Details of the uploaded file\n\n      console.log(this.state.selectedFile); // Request made to the backend api\n      // Send formData object\n\n      axios.post(\"api/uploadfile\", formData);\n    };\n\n    this.fileData = () => {\n      if (this.state.selectedFile) {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"File Details:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"File Name: \", this.state.selectedFile.name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"File Type: \", this.state.selectedFile.type]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Last Modified:\", \" \", this.state.selectedFile.lastModifiedDate.toDateString()]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 9\n        }, this);\n      } else {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Choose before Pressing the Upload button\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 9\n        }, this);\n      }\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"GeeksforGeeks\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"File Upload using React!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          onChange: this.onFileChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: this.onFileUpload,\n          children: \"Upload!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), this.fileData()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/yanismeziane/Desktop/udemy/src/App.js"],"names":["axios","NFTStorage","File","pack","React","Component","App","state","selectedFile","onFileChange","event","setState","target","files","onFileUpload","formData","FormData","append","name","console","log","post","fileData","type","lastModifiedDate","toDateString","render"],"mappings":";AAAA,OAAO,WAAP;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,EAAqBC,IAArB,QAAiC,aAAjC;AACA,SAASC,IAAT,QAAqB,eAArB;AAEA,OAAOC,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;;AAEA,MAAMC,GAAN,SAAkBD,SAAlB,CAA4B;AAAA;AAAA;AAAA,SAC1BE,KAD0B,GAClB;AAEN;AACAC,MAAAA,YAAY,EAAE;AAHR,KADkB;;AAAA,SAQ1BC,YAR0B,GAQXC,KAAK,IAAI;AAEtB;AACA,WAAKC,QAAL,CAAc;AAAEH,QAAAA,YAAY,EAAEE,KAAK,CAACE,MAAN,CAAaC,KAAb,CAAmB,CAAnB;AAAhB,OAAd;AAED,KAbyB;;AAAA,SAgB1BC,YAhB0B,GAgBX,MAAM;AAEnB;AACA,YAAMC,QAAQ,GAAG,IAAIC,QAAJ,EAAjB,CAHmB,CAKnB;;AACAD,MAAAA,QAAQ,CAACE,MAAT,CACE,QADF,EAEE,KAAKV,KAAL,CAAWC,YAFb,EAGE,KAAKD,KAAL,CAAWC,YAAX,CAAwBU,IAH1B,EANmB,CAYnB;;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKb,KAAL,CAAWC,YAAvB,EAbmB,CAenB;AACA;;AACAR,MAAAA,KAAK,CAACqB,IAAN,CAAW,gBAAX,EAA6BN,QAA7B;AACD,KAlCyB;;AAAA,SAsC1BO,QAtC0B,GAsCf,MAAM;AAEf,UAAI,KAAKf,KAAL,CAAWC,YAAf,EAA6B;AAE3B,4BACE;AAAA,kCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAGE;AAAA,sCAAe,KAAKD,KAAL,CAAWC,YAAX,CAAwBU,IAAvC;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHF,eAME;AAAA,sCAAe,KAAKX,KAAL,CAAWC,YAAX,CAAwBe,IAAvC;AAAA;AAAA;AAAA;AAAA;AAAA,kBANF,eASE;AAAA,yCACiB,GADjB,EAEG,KAAKhB,KAAL,CAAWC,YAAX,CAAwBgB,gBAAxB,CAAyCC,YAAzC,EAFH;AAAA;AAAA;AAAA;AAAA;AAAA,kBATF;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF;AAiBD,OAnBD,MAmBO;AACL,4BACE;AAAA,kCACE;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF;AAMD;AACF,KAnEyB;AAAA;;AAqE1BC,EAAAA,MAAM,GAAG;AAEP,wBACE;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF,eAOE;AAAA,gCACE;AAAO,UAAA,IAAI,EAAC,MAAZ;AAAmB,UAAA,QAAQ,EAAE,KAAKjB;AAAlC;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAQ,UAAA,OAAO,EAAE,KAAKK,YAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cAPF,EAaG,KAAKQ,QAAL,EAbH;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAiBD;;AAxFyB;;AA4F5B,eAAehB,GAAf","sourcesContent":["import './App.css';\nimport axios from 'axios';\nimport { NFTStorage, File } from 'nft.storage'\nimport { pack } from 'ipfs-car/pack';\n\nimport React, { Component } from 'react';\n\nclass App extends Component {\n  state = {\n\n    // Initially, no file is selected\n    selectedFile: null\n  };\n\n  // On file select (from the pop up)\n  onFileChange = event => {\n\n    // Update the state\n    this.setState({ selectedFile: event.target.files[0] });\n\n  };\n\n  // On file upload (click the upload button)\n  onFileUpload = () => {\n\n    // Create an object of formData\n    const formData = new FormData();\n\n    // Update the formData object\n    formData.append(\n      \"myFile\",\n      this.state.selectedFile,\n      this.state.selectedFile.name\n    );\n\n    // Details of the uploaded file\n    console.log(this.state.selectedFile);\n\n    // Request made to the backend api\n    // Send formData object\n    axios.post(\"api/uploadfile\", formData);\n  };\n\n  // File content to be displayed after\n  // file upload is complete\n  fileData = () => {\n\n    if (this.state.selectedFile) {\n\n      return (\n        <div>\n          <h2>File Details:</h2>\n\n          <p>File Name: {this.state.selectedFile.name}</p>\n\n\n          <p>File Type: {this.state.selectedFile.type}</p>\n\n\n          <p>\n            Last Modified:{\" \"}\n            {this.state.selectedFile.lastModifiedDate.toDateString()}\n          </p>\n\n        </div>\n      );\n    } else {\n      return (\n        <div>\n          <br />\n          <h4>Choose before Pressing the Upload button</h4>\n        </div>\n      );\n    }\n  };\n\n  render() {\n\n    return (\n      <div>\n        <h1>\n          GeeksforGeeks\n        </h1>\n        <h3>\n          File Upload using React!\n        </h3>\n        <div>\n          <input type=\"file\" onChange={this.onFileChange} />\n          <button onClick={this.onFileUpload}>\n            Upload!\n          </button>\n        </div>\n        {this.fileData()}\n      </div>\n    );\n  }\n}\n\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}